server:
  port: 8083

spring:
  application:
    name: order-service
  data:
    cassandra:
      keyspace-name: order_service
      contact-points: localhost
      port: 9042
      local-datacenter: datacenter1
      schema-action: CREATE_IF_NOT_EXISTS
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        enable.idempotence: true  # 启用生产者的幂等性功能，消息不会重复发送（即使因网络问题触发了重试）
        acks: all #最高级别，消息必须被所有ISR(In-Sync Replicas)副本确认
        retries: 3  # 可选：重试次数
        properties:
          max.in.flight.requests.per.connection: 1  #控制单个连接上未确认请求的最大数量 可选：确保消息顺序
    consumer:
      group-id: order-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: latest
      enable-auto-commit: false #禁用消费者自动提交偏移量
      properties:
        isolation.level: read_committed #消费者只能读取已成功提交的事务写入的消息

  # 添加 JWT 配置
  jwt:
    secret: mySecretKey123456789012345678901234567890  # 至少32个字符的密钥
    expiration: 86400000  # token过期时间
    header: Authorization  # HTTP header名称
    prefix: Bearer   # token前缀
logging:
  level:
    org.springframework.data.cassandra: DEBUG

